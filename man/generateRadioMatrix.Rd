% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inputRadioMatrix.R
\name{generateRadioMatrix}
\alias{generateRadioMatrix}
\title{Generate complete HTML markup for radioMatrixIpnut}
\usage{
generateRadioMatrix(inputId, rowIds, minLabels, maxLabels, selected = NULL,
  choiceNames = NULL, choiceValues = NULL,
  session = getDefaultReactiveDomain())
}
\arguments{
\item{inputId}{The input slot that will be used to access the value.}

\item{rowIds}{character. Vector of row identifiers. They will be used to find
values that the user has selected. In the output, the component will return
a named list of values, each name corresponding to the row id, and the
value - to the value user has selected in this row.}

\item{minLabels, maxLabels}{character. Vectors of displayed labels of the
leftmost and rightmost points of each row}

\item{selected}{either \code{NULL} (default) or a vector of values which
should be selected when the component is created}

\item{choiceNames, choiceValues}{as in radioButtons. Repeated here: List of
names and values, respectively, that are displayed to the user in the app
and correspond to the each choice (for this reason, choiceNames and
choiceValues must have the same length). If either of these arguments is
provided, then the other must be provided and choices must not be provided.
The advantage of using both of these over a named list for choices is that
choiceNames allows any type of UI object to be passed through (tag objects,
icons, HTML code, ...), instead of just simple text.}

\item{session}{copied from \code{shiny:::generateOptions}}
}
\value{
HTML markup for the radioMatrixInput
}
\description{
Generate complete HTML markup for radioMatrixIpnut
}
